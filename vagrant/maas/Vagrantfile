# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  # Every Vagrant development environment requires a box. 
  config.vm.box = "ubuntu/focal64"
  
  # Share an additional folder to the guest VM. 
  config.vm.synced_folder "data", "/data"

  config.vm.define "rack" do |rack|
      # Create a forwarded port mapping which allows access to a specific port
      rack.vm.network "forwarded_port", guest: 5240, host: 5240, auto_correct: false
    
      # Create a private network, which allows host-only access to the machine
      rack.vm.network "private_network", ip: "192.168.137.100"
    
      # Provider-specific configuration so you can fine-tune various
      rack.vm.provider "virtualbox" do |vb|
         vb.memory = "6144"
         vb.cpus = 2
         vb.name = "rackserver"
      end
      
      # Enable provisioning with a shell script. 
      rack.vm.provision "shell", inline: <<-SHELL
        sudo add-apt-repository ppa:maas/3.0-next
        sudo apt update
        sudo apt install -y maas jq markdown nmap traceroute git curl wget 
        sudo maas createadmin --username ubuntu --password password --email marcel.bernet@tbz.ch --ssh-import gh:mc-b
SHELL
  end
  
  config.vm.define "kvm01" do |kvm01|
      # Create a private network, which allows host-only access to the machine
      kvm01.vm.network "private_network", ip: "192.168.137.101"
    
      # Provider-specific configuration so you can fine-tune various
      kvm01.vm.provider "virtualbox" do |vb|
         vb.memory = "8192"
         vb.cpus = 2
         vb.name = "kvm01"
         vb.customize ["modifyvm", :id, "--nested-hw-virt", "on"]         
      end
      
      # Enable provisioning with a shell script. 
      kvm01.vm.provision "shell", inline: <<-SHELL
        sudo apt update
        sudo apt install -y jq markdown nmap traceroute git curl wget zfsutils-linux cloud-image-utils virtinst qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils whois
        sudo snap refresh
        cat <<%EOF% | sudo lxd init --preseed
config:
  core.https_address: '[::]:8443'
  core.trust_password: password
networks:
- config:
    ipv4.address: auto
    ipv6.address: auto
  description: ""
  name: lxdbr0
  type: ""
  project: default
storage_pools:
- config:
    size: 34GB
  description: ""
  name: default
  driver: zfs
profiles:
- config: {}
  description: ""
  devices:
    eth0:
      name: eth0
      network: lxdbr0
      type: nic
    root:
      path: /
      pool: default
      type: disk
  name: default
projects: []
cluster: null
%EOF%
        sudo lxc network set lxdbr0 dns.mode=none
        sudo lxc network set lxdbr0 ipv4.dhcp=false
        sudo lxc network set lxdbr0 ipv6.dhcp=false
SHELL
  end  
end
